class n{constructor(t=0,r="Network Error"){this.status=t,this.text=r}}const h=()=>{if(!(typeof localStorage>"u"))return{get:e=>Promise.resolve(localStorage.getItem(e)),set:(e,t)=>Promise.resolve(localStorage.setItem(e,t)),remove:e=>Promise.resolve(localStorage.removeItem(e))}},s={origin:"https://api.emailjs.com",blockHeadless:!1,storageProvider:h()},l=e=>e?typeof e=="string"?{publicKey:e}:e.toString()==="[object Object]"?e:{}:{},H=(e,t="https://api.emailjs.com")=>{if(!e)return;const r=l(e);s.publicKey=r.publicKey,s.blockHeadless=r.blockHeadless,s.storageProvider=r.storageProvider,s.blockList=r.blockList,s.limitRate=r.limitRate,s.origin=r.origin||t},b=async(e,t,r={})=>{const i=await fetch(s.origin+e,{method:"POST",headers:r,body:t}),a=await i.text(),o=new n(i.status,a);if(i.ok)return o;throw o},f=(e,t,r)=>{if(!e||typeof e!="string")throw"The public key is required. Visit https://dashboard.emailjs.com/admin/account";if(!t||typeof t!="string")throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!r||typeof r!="string")throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates"},g=e=>{if(e&&e.toString()!=="[object Object]")throw"The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/"},w=e=>e.webdriver||!e.languages||e.languages.length===0,p=()=>new n(451,"Unavailable For Headless Browser"),y=(e,t)=>{if(!Array.isArray(e))throw"The BlockList list has to be an array";if(typeof t!="string")throw"The BlockList watchVariable has to be a string"},k=e=>!e.list?.length||!e.watchVariable,v=(e,t)=>e instanceof FormData?e.get(t):e[t],j=(e,t)=>{if(k(e))return!1;y(e.list,e.watchVariable);const r=v(t,e.watchVariable);return typeof r!="string"?!1:e.list.includes(r)},P=()=>new n(403,"Forbidden"),T=(e,t)=>{if(typeof e!="number"||e<0)throw"The LimitRate throttle has to be a positive number";if(t&&typeof t!="string")throw"The LimitRate ID has to be a non-empty string"},L=async(e,t,r)=>{const i=Number(await r.get(e)||0);return t-Date.now()+i},S=async(e,t,r)=>{if(!t.throttle||!r)return!1;T(t.throttle,t.id);const i=t.id||e;return await L(i,t.throttle,r)>0?!0:(await r.set(i,Date.now().toString()),!1)},R=()=>new n(429,"Too Many Requests"),B=async(e,t,r,i)=>{const a=l(i),o=a.publicKey||s.publicKey,c=a.blockHeadless||s.blockHeadless,m=a.storageProvider||s.storageProvider,u={...s.blockList,...a.blockList},d={...s.limitRate,...a.limitRate};return c&&w(navigator)?Promise.reject(p()):(f(o,e,t),g(r),r&&j(u,r)?Promise.reject(P()):await S(location.pathname,d,m)?Promise.reject(R()):b("/api/v1.0/email/send",JSON.stringify({lib_version:"4.4.1",user_id:o,service_id:e,template_id:t,template_params:r}),{"Content-type":"application/json"}))};export{n as EmailJSResponseStatus,H as init,B as send};
